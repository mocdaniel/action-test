name: Releases
on:
  workflow_run:
    workflows:
      - Format
    branches:
      - main
    types:
      - completed

jobs:
  changelog:
    runs-on: ubuntu-latest

    steps:

      - name: create temporary branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        id: create-branch
        with:
          branch: "release-from-${{ github.sha }}"
          sha: "${{ github.sha }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3

      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: "./package.json,./package-lock.json"
          skip-on-empty: false
          skip-git-pull: true
          git-push: false

      - name: Stash changes, change branch and commit 
        run: git fetch --all &&  git branch -M release-from-${{ github.sha }} && git push origin release-from-${{ github.sha }}

      - name: create PR with release info
        id: create-pr
        run: gh pr create -B main -H release-from-${{ github.sha }} --title 'Merge new release into main' --body 'Created by Github action'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: merge PR with release info
        id: merge-pr
        run: gh pr merge --admin --merge --subject 'Merge release info' --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: create release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
